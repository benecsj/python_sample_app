# Test metadata
test:
  name: "Crypto Filter Usecase Functionality"
  description: "Test crypto filter usecase functionality through the CLI interface"
  category: "feature"
  id: "3002"

---
# Source files
source_files:
  src/crypto/aes.c: |
    void aes_encrypt() {
        // AES encryption
    }
  src/crypto/rsa.c: |
    void rsa_encrypt() {
        // RSA encryption
    }
  src/main.c: |
    int main() {
        return 0;
    }

---
# Configuration
config.json: |
  {
    "project_name": "crypto_usecase_test",
    "source_folders": ["."],
    "recursive_search": true,
    "output_dir": "./output",
    "filters": {
      "remove_files": [".*crypto.*"]
    }
  }

---
# Assertions
assertions:
  execution:
    exit_code: 0
    max_execution_time: 30.0
    stdout_contains: "PlantUML generation complete"
  
  model:
    validate_structure: true
    project_name: "crypto_usecase_test"
    expected_files: ["src/main.c"]
    
    functions_exist: ["main"]
  
  puml:
    syntax_valid: true
    file_count: 1
    contains_elements: ["main"]
    not_contains_elements: ["aes_encrypt", "rsa_encrypt"]
  
  files:
    files_exist:
      - "./output/main.puml"