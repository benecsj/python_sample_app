test:
  name: "Preprocessor and Macros \u2013 Comprehensive"
  description: Consolidated preprocessor handling, nested conditions, macro stringification/pasting,
    and duplicate macro scenarios
  category: unit
  id: '114'
---
source_files:
  preproc_all.c: |
    #include <stdio.h>n#include <stdlib.h>n#include "preproc_header.h"
        nn// Duplicate macro name under conditional branchesn#if 1n  #define DEPRECATED
         __attribute__((deprecated))n#elsen  #define DEPRECATEDn#endifnn// Basic
         macrosn#define MAX_SIZE 100n#define MIN_SIZE 10n#define VERSION_STRING "
        1.0.0"nn// Conditional logging macron#ifdef DEBUGn  #define LOG(msg) printf("
        DEBUG: %s
    ", msg)n#elsen  #define LOG(msg)n#endifnntypedef struct {n
          int id;n  char name[MAX_SIZE];n} Item;nn#if defined(FEATURE_A)n  typedef
         struct { int feature_a_data; } FeatureA;n#endifnn#ifndef DISABLE_FEATURE_Bn
          typedef struct { float feature_b_value; } FeatureB;n#endifnnint process_item(Item*
         item);nvoid initialize_system(void);nnint global_items = 0;nnint process_item(Item*
         item) {n  if (item == NULL) return -1;n  LOG("Processing item");n  return
         item->id;n}nnvoid initialize_system(void) {n  LOG("System initialized"
        );n  global_items = 0;n}n
  preproc_header.h: |
    #ifndef PREPROCESSOR_HEADER_H
    #define PREPROCESSOR_HEADER_H
    \
        
    #define HEADER_VERSION 2
    #define API_VERSION "2.1.0"
    
    typedef struct Item\
        \ Item;
    
    #ifdef FEATURE_A
      typedef struct FeatureA FeatureA;
    #endif
    
    #ifndef\
        \ DISABLE_FEATURE_B
      typedef struct FeatureB FeatureB;
    #endif
    
    int process_item(Item*\
        \ item);
    void initialize_system(void);
    
    #endif // PREPROCESSOR_HEADER_H
    
---
config.json: |
  {
    "project_name": "preprocessor_and_macros_comprehensive",
  \  "source_folders": ["."],
    "output_dir": "./output",
    "recursive_search": true
  }
  
---
assertions:
  execution:
    exit_code: 0
    output_files:
    - model.json
    - model_transformed.json
    - preproc_all.puml
  model:
    files:
      preproc_all.c:
        structs:
          Item:
            fields:
            - id
            - name
        functions:
        - process_item
        - initialize_system
        globals:
        - global_items
        macros:
        - DEPRECATED
        - MAX_SIZE
        - MIN_SIZE
        - VERSION_STRING
        - LOG
        includes:
        - stdio.h
        - stdlib.h
        - preproc_header.h
  puml:
    syntax_valid: true
    files:
      preproc_all.puml:
        contains_elements:
        - Item
        - process_item
        - initialize_system
        - global_items
