scenarios:
  - id: "relative_path"
    test: { name: "Absolute Path - Relative Handling", category: "unit", id: "0070" }
    source_files:
      a.c: |
        #include "b.h"
      b.h: |
        int x;
    config.json: |
      {"project_name":"abs","source_folders":["."],"output_dir":"./output"}
    assertions:
      execution: { exit_code: 0 }
  - id: "subdirectory"
    test: { name: "Absolute Path - Subdirectory Includes", category: "unit", id: "0071" }
    source_files:
      src/a.c: |
        #include "inc/b.h"
      inc/b.h: |
        int y;
    config.json: |
      {"project_name":"abs","source_folders":["."],"output_dir":"./output","recursive_search":true}
    assertions:
      execution: { exit_code: 0 }
  - id: "mixed_paths"
    test: { name: "Absolute Path - Mixed Paths", category: "unit", id: "0072" }
    source_files:
      a.c: |
        #include "./b.h"
      b.h: |
        int z;
    config.json: |
      {"project_name":"abs","source_folders":["."],"output_dir":"./output"}
    assertions:
      execution: { exit_code: 0 }
  - id: "consistency"
    test: { name: "Absolute vs Relative Consistency", category: "unit", id: "0073" }
    source_files:
      a.c: |
        #include "b.h"
      b.h: |
        #include "c.h"
      c.h: |
        int w;
    config.json: |
      {"project_name":"abs","source_folders":["."],"output_dir":"./output","recursive_search":true}
    assertions:
      execution: { exit_code: 0 }