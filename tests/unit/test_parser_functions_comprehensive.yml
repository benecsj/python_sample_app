scenarios:
  - id: "functions"
    test: { name: "Parser - Functions", category: "unit", id: "0050" }
    source_files:
      functions.c: |
        int calculate(int a, int b) { return a + b; }
        void print_message(char* message) {}
    config.json: |
      {"project_name":"parser_functions","source_folders":["."],"output_dir":"./output","recursive_search":true}
    assertions:
      execution: { exit_code: 0 }
  - id: "declarations"
    test: { name: "Parser - Function Declarations", category: "unit", id: "0051" }
    source_files:
      decl.c: |
        int f(int);
        void g(void);
    config.json: |
      {"project_name":"parser_decl","source_folders":["."],"output_dir":"./output"}
    assertions:
      execution: { exit_code: 0 }
  - id: "definitions"
    test: { name: "Parser - Function Definitions", category: "unit", id: "0052" }
    source_files:
      def.c: |
        int f(int x){return x;}
        void g(void){}
    config.json: |
      {"project_name":"parser_def","source_folders":["."],"output_dir":"./output"}
    assertions:
      execution: { exit_code: 0 }
  - id: "modifiers"
    test: { name: "Parser - Modifiers", category: "unit", id: "0053" }
    source_files:
      mods.c: |
        static int f(void){return 0;}
        inline void g(void){}
    config.json: |
      {"project_name":"parser_mod","source_folders":["."],"output_dir":"./output"}
    assertions:
      execution: { exit_code: 0 }