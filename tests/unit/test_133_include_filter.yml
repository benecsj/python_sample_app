test:
  name: Include Filtering Comprehensive
  description: Comprehensive test for include filtering with depth control and file-specific
    filters
  category: unit
  id: '133'
---
source_files:
  processor.c: |
    #include "api.h"
    #include "worker.h"
    #include "private_worker.h"
        
    
    // Main processor functions
    void process_data() {
        api_function();
        \    worker_function();
    }
    
    int main() {
        process_data();
        return 0;
        }
    
  types.h: |
    #ifndef TYPES_H
    #define TYPES_H
    
    #include "constants.h"
    
    typedef
        \ int ProcessorID;
    typedef struct {
        int x, y;
    } Point;
    
    #endif
    
  errors.h: |
    #ifndef ERRORS_H
    #define ERRORS_H
    
    enum ErrorCode {
        ERROR_NONE,
        \    ERROR_INVALID,
        ERROR_MEMORY
    };
    
    #endif
    
config.json: |
  {
    "project_name": "test_include_filtering",
    "source_folders": ["."],
    "output_dir": "./output",
    "recursive_search": true,
    "include_depth": 3,
    "file_specific": {
      "processor.c": {
        "include_filter": ["^api\\\\.h$", "^worker\\\\.h$", "^types\\\\.h$", "^platform\\\\.h$"],
        "include_depth": 2
      }
    }
  }
  
---
assertions:
  execution:
    exit_code: 0
    output_files:
    - model.json
    - model_transformed.json
    - processor.puml
  model:
    validate_structure: true
    project_name: test_include_filtering
    expected_files:
    - processor.c
    - api.h
    - worker.h
    - types.h
    - platform.h
    - private_worker.h
    - memory.h
    - validation.h
    - errors.h
    - constants.h
    - internal.h
    files:
      processor.c:
        includes_exist:
        - api.h
        - worker.h
        - private_worker.h
        functions_exist:
        - process_data
        - main
      api.h:
        includes_exist:
        - types.h
        - platform.h
        - memory.h
        functions_exist:
        - api_function
        globals_exist:
        - api_global
      worker.h:
        includes_exist:
        - validation.h
        - errors.h
        functions_exist:
        - worker_function
        globals_exist:
        - worker_global
      types.h:
        includes_exist:
        - constants.h
        structs_exist:
        - Point
      platform.h:
        macros_exist:
        - PLATFORM_LINUX
        - MAX_THREADS
  puml:
    syntax_valid: true
    file_count: 1
    contains_elements:
    - processor
    - api
    - worker
    - types
    - platform
    files:
      processor.puml:
        syntax_valid: true
        contains_elements:
        - api
        - worker
        - types
        - platform
        contains_lines:
        - PROCESSOR --> HEADER_API
        - PROCESSOR --> HEADER_WORKER
        - void process_data()
        - int main()
