@startuml sample

class "sample" as SAMPLE <<source>> #LightBlue
{
    -- Macros --
    - #define MAX_SIZE
    - #define DEBUG_MODE
    - #define CALC
    -- Global Variables --
    - int global_counter
    - char buffer
    - double * global_ptr
    -- Functions --
    int calculate_sum(int a, int b)
    point_t * create_point(int x, int y, const char * label)
    void process_point(point_t * p)
    void demo_triangle_usage()
    int main()
}

class "<stdio.h>.h" as HEADER_<STDIO_H> <<header>> #LightGray
{
}

class "<stdlib.h>.h" as HEADER_<STDLIB_H> <<header>> #LightGray
{
}

class "<string.h>.h" as HEADER_<STRING_H> <<header>> #LightGray
{
}

class ""sample.h".h" as HEADER_"SAMPLE_H" <<header>> #LightGray
{
}

class ""math_utils.h".h" as HEADER_"MATH_UTILS_H" <<header>> #LightGray
{
}

class ""logger.h".h" as HEADER_"LOGGER_H" <<header>> #LightGray
{
}

class ""geometry.h".h" as HEADER_"GEOMETRY_H" <<header>> #LightGray
{
}

SAMPLE --> HEADER_<STDIO_H> : <<include>>
SAMPLE --> HEADER_<STDLIB_H> : <<include>>
SAMPLE --> HEADER_<STRING_H> : <<include>>
SAMPLE --> HEADER_"SAMPLE_H" : <<include>>
SAMPLE --> HEADER_"MATH_UTILS_H" : <<include>>
SAMPLE --> HEADER_"LOGGER_H" : <<include>>
SAMPLE --> HEADER_"GEOMETRY_H" : <<include>>

@enduml