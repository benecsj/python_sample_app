@startuml logger

class "logger" as LOGGER <<source>> #LightBlue
{
    -- Global Variables --
    - log_callback_t current_cb
    -- Functions --
    void set_log_callback(log_callback_t cb)
    void log_message(log_level_t level, const char * fmt, ... ...)
}

class ""logger.h".h" as HEADER_"LOGGER_H" <<header>> #LightGray
{
}

class "<stdarg.h>.h" as HEADER_<STDARG_H> <<header>> #LightGray
{
}

class "<string.h>.h" as HEADER_<STRING_H> <<header>> #LightGray
{
}

LOGGER --> HEADER_"LOGGER_H" : <<include>>
LOGGER --> HEADER_<STDARG_H> : <<include>>
LOGGER --> HEADER_<STRING_H> : <<include>>

@enduml