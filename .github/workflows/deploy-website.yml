name: Deploy Website to GitHub Pages

on:
  # Automatic deployment on push to main/master
  push:
    branches: [ main, master ]
  
  # Manual trigger for redeployment
  workflow_dispatch:
    inputs:
      force_redeploy:
        description: 'Force complete redeployment of website'
        required: false
        default: true
        type: boolean
      clean_deploy:
        description: 'Clean previous deployment before redeploying'
        required: false
        default: true
        type: boolean

  # Schedule daily refresh (optional)
  schedule:
    - cron: '0 2 * * *'  # Daily at 2 AM UTC

jobs:
  deploy-website:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
      id-token: write
    
    concurrency:
      group: "pages"
      cancel-in-progress: false
    
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.PERSONAL_ACCESS_TOKEN || github.token }}
        fetch-depth: 0  # Full history for complete deployment
        
    - name: 🔧 Setup Git credentials
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        
        # Use Personal Access Token if available for better authentication
        if [ -n "${{ secrets.PERSONAL_ACCESS_TOKEN }}" ]; then
          echo "✅ Using Personal Access Token for authentication"
          git remote set-url origin https://x-access-token:${{ secrets.PERSONAL_ACCESS_TOKEN }}@github.com/${{ github.repository }}
        else
          echo "⚠️ Personal Access Token not configured, using GitHub token"
          git remote set-url origin https://x-access-token:${{ github.token }}@github.com/${{ github.repository }}
        fi
        
    - name: 🐍 Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
        
    - name: 📦 Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install -r requirements-dev.txt
        
    - name: 🧪 Generate test coverage reports
      run: |
        echo "🧪 Generating test coverage reports..."
        ./run_tests_with_coverage.sh
        
    - name: 📊 Generate PlantUML diagrams
      run: |
        echo "📊 Generating PlantUML diagrams..."
        # Install system dependencies
        sudo apt-get update
        sudo apt-get install -y graphviz default-jre
        
        # Setup PlantUML
        if [ ! -f "plantuml.jar" ]; then
          wget https://github.com/plantuml/plantuml/releases/download/v1.2024.0/plantuml-1.2024.0.jar -O plantuml.jar
        fi
        
        # Generate PNG images from PlantUML files
        chmod +x ./picgen.sh
        ./picgen.sh
        
    - name: 🏗️ Prepare website files
      run: |
        echo "🏗️ Preparing website files for deployment..."
        
        # Create docs directory for GitHub Pages
        mkdir -p docs
        
        # Copy README as index page
        cp README.md docs/index.md
        
        # Copy test reports
        if [ -d "tests/reports" ]; then
          mkdir -p docs/tests/reports
          cp -r tests/reports/* docs/tests/reports/
        fi
        
        # Copy generated output (PlantUML diagrams, PNG images)
        if [ -d "output" ]; then
          mkdir -p docs/output
          cp -r output/* docs/output/
        fi
        
        # Copy example files
        if [ -d "example" ]; then
          mkdir -p docs/example
          cp -r example/* docs/example/
        fi
        
        # Create a simple navigation page
        cat > docs/navigation.md << 'EOF'
        # Project Navigation
        
        ## 📋 Main Pages
        - [🏠 Home](index.html)
        - [📊 Test Coverage Reports](tests/reports/coverage/index.html)
        - [📝 Test Summary](tests/reports/test_summary.html)
        
        ## 📁 Generated Content
        - [📊 PlantUML Diagrams](output/)
        - [📋 Examples](example/)
        
        ## 📚 Documentation
        - [📖 README](index.html)
        - [🔧 Specification](specification.md)
        
        ---
        *Last updated: $(date)*
        EOF
        
        # Convert markdown files to HTML for better GitHub Pages display
        echo "🔄 Converting markdown files to HTML..."
        
        # Create a simple HTML template
        cat > docs/template.html << 'EOF'
        <!DOCTYPE html>
        <html lang="en">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>{{TITLE}}</title>
            <style>
                body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; margin: 0; padding: 20px; }
                .container { max-width: 1200px; margin: 0 auto; }
                .header { background: #f6f8fa; padding: 20px; border-radius: 6px; margin-bottom: 20px; }
                .content { background: white; padding: 20px; border-radius: 6px; box-shadow: 0 1px 3px rgba(0,0,0,0.1); }
                .nav { background: #0366d6; color: white; padding: 10px 20px; border-radius: 6px; margin-bottom: 20px; }
                .nav a { color: white; text-decoration: none; margin-right: 20px; }
                .nav a:hover { text-decoration: underline; }
                pre { background: #f6f8fa; padding: 15px; border-radius: 6px; overflow-x: auto; }
                code { background: #f6f8fa; padding: 2px 4px; border-radius: 3px; }
                img { max-width: 100%; height: auto; }
                .footer { text-align: center; margin-top: 40px; padding: 20px; color: #586069; border-top: 1px solid #e1e4e8; }
            </style>
        </head>
        <body>
            <div class="container">
                <div class="nav">
                    <a href="index.html">🏠 Home</a>
                    <a href="tests/reports/coverage/index.html">📊 Coverage</a>
                    <a href="tests/reports/test_summary.html">📝 Tests</a>
                    <a href="output/">📊 Diagrams</a>
                    <a href="example/">📋 Examples</a>
                </div>
                <div class="header">
                    <h1>{{TITLE}}</h1>
                    <p>Generated on {{DATE}} by GitHub Actions</p>
                </div>
                <div class="content">
                    {{CONTENT}}
                </div>
                <div class="footer">
                    <p>Deployed from <a href="https://github.com/{{REPO}}">{{REPO}}</a></p>
                </div>
            </div>
        </body>
        </html>
        EOF
        
        # Convert index.md to HTML
        if [ -f "docs/index.md" ]; then
          echo "Converting index.md to HTML..."
          pandoc docs/index.md -o docs/index.html --template=docs/template.html \
            -V TITLE="C to PlantUML Converter" \
            -V DATE="$(date)" \
            -V REPO="${{ github.repository }}" \
            --standalone
        fi
        
        # Convert navigation.md to HTML
        if [ -f "docs/navigation.md" ]; then
          echo "Converting navigation.md to HTML..."
          pandoc docs/navigation.md -o docs/navigation.html --template=docs/template.html \
            -V TITLE="Project Navigation" \
            -V DATE="$(date)" \
            -V REPO="${{ github.repository }}" \
            --standalone
        fi
        
        # Create a simple index.html if pandoc is not available
        if [ ! -f "docs/index.html" ]; then
          echo "Creating simple index.html..."
          cat > docs/index.html << 'EOF'
        <!DOCTYPE html>
        <html lang="en">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>C to PlantUML Converter</title>
            <style>
                body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; margin: 0; padding: 20px; }
                .container { max-width: 1200px; margin: 0 auto; }
                .header { background: #f6f8fa; padding: 20px; border-radius: 6px; margin-bottom: 20px; }
                .content { background: white; padding: 20px; border-radius: 6px; box-shadow: 0 1px 3px rgba(0,0,0,0.1); }
                .nav { background: #0366d6; color: white; padding: 10px 20px; border-radius: 6px; margin-bottom: 20px; }
                .nav a { color: white; text-decoration: none; margin-right: 20px; }
                .nav a:hover { text-decoration: underline; }
                .footer { text-align: center; margin-top: 40px; padding: 20px; color: #586069; border-top: 1px solid #e1e4e8; }
            </style>
        </head>
        <body>
            <div class="container">
                <div class="nav">
                    <a href="index.html">🏠 Home</a>
                    <a href="tests/reports/coverage/index.html">📊 Coverage</a>
                    <a href="tests/reports/test_summary.html">📝 Tests</a>
                    <a href="output/">📊 Diagrams</a>
                    <a href="example/">📋 Examples</a>
                </div>
                <div class="header">
                    <h1>C to PlantUML Converter</h1>
                    <p>Generated on $(date) by GitHub Actions</p>
                </div>
                <div class="content">
                    <h2>Welcome to the C to PlantUML Converter Project</h2>
                    <p>This is a Python tool for converting C/C++ source code to PlantUML diagrams.</p>
                    <h3>Quick Links:</h3>
                    <ul>
                        <li><a href="tests/reports/coverage/index.html">📊 Test Coverage Reports</a></li>
                        <li><a href="tests/reports/test_summary.html">📝 Test Summary</a></li>
                        <li><a href="output/">📊 Generated PlantUML Diagrams</a></li>
                        <li><a href="example/">📋 Examples</a></li>
                    </ul>
                    <p>For detailed information, see the <a href="index.md">README</a> file.</p>
                </div>
                <div class="footer">
                    <p>Deployed from <a href="https://github.com/${{ github.repository }}">${{ github.repository }}</a></p>
                </div>
            </div>
        </body>
        </html>
        EOF
        fi
        
        echo "✅ Website files prepared successfully"
        
    - name: 📋 List deployment files
      run: |
        echo "📋 Files ready for deployment:"
        find docs -type f | sort
        echo ""
        echo "📊 Summary:"
        echo "Total files: $(find docs -type f | wc -l)"
        echo "HTML files: $(find docs -name "*.html" | wc -l)"
        echo "PNG files: $(find docs -name "*.png" | wc -l)"
        echo "Markdown files: $(find docs -name "*.md" | wc -l)"
        
    - name: 🚀 Deploy to GitHub Pages
      uses: actions/deploy-pages@v4
      with:
        path: docs
        
    - name: 📤 Upload deployment artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: website-deployment-files
        path: docs/
        retention-days: 30
        
    - name: 🎯 Deployment Summary
      if: always()
      run: |
        echo "## 🚀 Website Deployment Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### ✅ Deployment Completed Successfully" >> $GITHUB_STEP_SUMMARY
        echo "- **Website URL**: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Deployment Time**: $(date)" >> $GITHUB_STEP_SUMMARY
        echo "- **Trigger**: ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        echo "### 📁 Deployed Content" >> $GITHUB_STEP_SUMMARY
        echo "- 📊 Test coverage reports" >> $GITHUB_STEP_SUMMARY
        echo "- 📝 Test execution summaries" >> $GITHUB_STEP_SUMMARY
        echo "- 📊 PlantUML diagrams and PNG images" >> $GITHUB_STEP_SUMMARY
        echo "- 📋 Project examples" >> $GITHUB_STEP_SUMMARY
        echo "- 📖 Project documentation" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        echo "### 🔗 Quick Links" >> $GITHUB_STEP_SUMMARY
        echo "- [🏠 Home Page](https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/)" >> $GITHUB_STEP_SUMMARY
        echo "- [📊 Coverage Report](https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/tests/reports/coverage/)" >> $GITHUB_STEP_SUMMARY
        echo "- [📝 Test Summary](https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/tests/reports/test_summary.html)" >> $GITHUB_STEP_SUMMARY
        echo "- [📊 Diagrams](https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/output/)" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        echo "### 🔄 Next Steps" >> $GITHUB_STEP_SUMMARY
        echo "- Website will be available in a few minutes" >> $GITHUB_STEP_SUMMARY
        echo "- GitHub Pages may take up to 10 minutes to update" >> $GITHUB_STEP_SUMMARY
        echo "- Check the Actions tab for deployment status" >> $GITHUB_STEP_SUMMARY